app = "demol-3203"
kill_signal = "SIGINT"
kill_timeout = 5
processes = [ ]

[experimental]
allowed_public_ports = [ ]
auto_rollback = true
cmd = "start.sh"
entrypoint = "sh"

[mounts]
source = "data"
destination = "/data"

[env]
  OAUTH2_BASEURL = "https://optis.auth.eu-west-1.amazoncognito.com"
  OAUTH2_AUTHORIZATIONURL = "https://optis.auth.eu-west-1.amazoncognito.com/oauth2/authorize"
  OAUTH2_TOKENURL = "https://optis.auth.eu-west-1.amazoncognito.com/oauth2/token"
  OAUTH2_USERINFOURL = "https://optis.auth.eu-west-1.amazoncognito.com/oauth2/userInfo"
  OAUTH2_CLIENTID = "6cdhg4buar22jvs0gsjkspa741"
  OAUTH2_CALLBACKURL = "https://demol-3203.fly.dev/auth/callback"
  OAUTH2_LOGOUTURL = "https://demol-3203.fly.dev/logout"
  ADMIN_ID = "e4d9bdef-8b48-4562-b227-ca56100a9e3c"

[[services]]
internal_port = 8_080
processes = [ "app" ]
protocol = "tcp"
script_checks = [ ]

  [services.concurrency]
  hard_limit = 25
  soft_limit = 20
  type = "connections"

  [[services.ports]]
  handlers = [ "http" ]
  port = 80
  force_https = true

  [[services.ports]]
  handlers = [ "tls", "http" ]
  port = 443

  [[services.tcp_checks]]
  grace_period = "1s"
  interval = "15s"
  restart_limit = 0
  timeout = "2s"

  [[services.http_checks]]
  interval = "10s"
  grace_period = "5s"
  method = "get"
  path = "/healthcheck"
  protocol = "http"
  timeout = "2s"
  tls_skip_verify = false
  headers = { }
